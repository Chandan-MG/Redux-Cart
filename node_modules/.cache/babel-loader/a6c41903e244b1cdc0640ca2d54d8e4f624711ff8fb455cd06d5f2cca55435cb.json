{"ast":null,"code":"var _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\Redux\\\\Redux cart\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from './Store/ui-slice';\nimport Notification from './components/UI/Notifications';\nimport { fetchCartData } from './Store/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const isMyCart = useSelector(state => state.ui.cartIsVisible);\n  const notification = useSelector(state => state.ui.notification);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    const sendCartData = async () => {\n      if (cart.changed) {\n        dispatch(uiActions.showNotification({\n          status: \"loading\",\n          message: \"Sending your data...\",\n          title: 'Please Wait..'\n        }));\n        const response = await fetch('https://expense-tracker-dfeec-default-rtdb.firebaseio.com/cart.json', {\n          method: 'PUT',\n          body: JSON.stringify(cart)\n        });\n        if (!response.ok) {\n          throw new Error('Sending cart data failed');\n        }\n      }\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        message: \"Successfully sent data...\",\n        title: 'Success..'\n      }));\n    };\n    if (initial) {\n      initial = false;\n      return;\n    }\n    sendCartData().catch(err => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        message: \"Sending data failed...\",\n        title: 'Error..'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [isMyCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s9ZSLrjVy62fD2PLN3CgPaZE07Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","Cart","Layout","Products","useSelector","useDispatch","uiActions","Notification","fetchCartData","jsxDEV","_jsxDEV","initial","App","_s","dispatch","isMyCart","state","ui","cartIsVisible","notification","cart","sendCartData","changed","showNotification","status","message","title","response","fetch","method","body","JSON","stringify","ok","Error","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/chandan/Sharpener projects/Redux/Redux cart/01-starting-project/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport { uiActions } from './Store/ui-slice';\nimport Notification from './components/UI/Notifications';\nimport { fetchCartData } from './Store/cart-actions';\n\nlet initial =true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isMyCart = useSelector(state => state.ui.cartIsVisible);\n  const notification = useSelector(state => state.ui.notification);\n  const cart = useSelector((state)=> state.cart);\n\n  useEffect(()=>{\n    dispatch(fetchCartData()); \n  },[dispatch])\n\n  useEffect(()=>{\n    const sendCartData = async ()=>{\n      \n      if(cart.changed){\n        dispatch(uiActions.showNotification({\n          status: \"loading\",\n          message:\"Sending your data...\",\n          title: 'Please Wait..'\n        }));\n        const response = await fetch('https://expense-tracker-dfeec-default-rtdb.firebaseio.com/cart.json', {\n          method: 'PUT',\n          body: JSON.stringify(cart)\n        });\n\n        if(!response.ok){\n          throw new Error('Sending cart data failed');\n        }\n      }\n      \n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        message:\"Successfully sent data...\",\n        title: 'Success..'\n      }));\n\n    };\n\n    if(initial){\n      initial=false;\n      return;\n    }\n\n    sendCartData().catch(err=>{\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        message:\"Sending data failed...\",\n        title: 'Error..'\n      }));\n    })\n  }, [cart, dispatch])\n\n  return (\n    <Fragment>\n      {notification && (<Notification\n         status={notification.status}\n         title={notification.title}\n         message={notification.message}\n      />)}\n      <Layout>\n        {isMyCart && (<Cart />)}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}